"use strict";

// 1) Дан случайный массив чисел (создайте самостоятельно). С помощью метода .filter() отфильтруйте массив так, чтобы в новый массив вошли только четные двухзначные числа из исходного.

// const masivcik = [2, 13, 14, 17, 24, 31, 48]

// const evenNumber = masivcik.filter((number) => {
//     if(number >= 10 && number % 2 === 0) {
//         return true
//     }
// })
//    console.log(evenNumber)

//  -----------------------------------------------------------------------------------------------------------------------

// 2) Пользователь вводит 10 случайных значений. Каждое значение необходимо записать в массив. С помощью метода .every() проверить были ли все введенные пользователем данные – числами.

// let masivcik = [];

// let userNumbers;
// for (let i = 1; i <= 10; i++) {
//   userNumbers = Number(prompt("Enter Number"));
//   masivcik.push(userNumbers)
  
// }

// const ifAllAreNumbers = masivcik.includes(NaN) ? "Не все являются числами": "Все числа"
 
// console.log(ifAllAreNumbers)


//------------------------------------------------------------------------------------------------------------------------------


// 3) Дан массив объектов

// const arr = [
//   {
//     a: 2,
//     b: 1
//   },
//   {
//     a: 5, 
//     b: 12
//   },
//   {
//     a: 95,
//     b: 7
//   }
//  ]




 
// Используя ТОЛЬКО методы массивов (циклы запрещены):

// Вывести в консоль 'its valid', если во всех объектах поле a > b, вывести 'its invalid' если хотя бы в одном объекте a<=b

// const ifABigger = arr.every((item) => item.a > item.b ) ? "its valid": "its invalid"; 
// console.log (ifABigger)


 //--------------------------------------------------------------------------------------------------------------------


// На основе массива arr, создать массив объектов у которых поле b возведено в квадрат пример:

// const arr2 = [
//   {
//     a: 2, b: 1
//   },
//   {
//     a: 5, b: 144
//   },
//   {
//     a: 95, b: 49
//   }
// ];




// const newArr = arr.map((item) => {
//   return {...item, b: item.b **2}} )

// console.log(newArr)
